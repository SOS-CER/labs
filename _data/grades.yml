grades:
  lab00:
     overall:
       - item: CheckStyle Notifications
         points: 10
         details: Correct CheckStyle notifications are displayed demonstrating installation of plug-in and configuration file.
         icon: saTool
       - item: SpotBugs Notifications
         points: 10
         details: Correct SpotBugs notifications are displayed demonstrating installation of plug-in and configuration file.
         icon: saTool
       - item: PMD Notifications
         points: 10
         details: Correct PMD notifications are displayed demonstrating installation of plug-in and configuration file.
         icon: saTool
       - item: Java 17
         points: 15
         details: Java 17 is the default JDK in Eclipse
         icon: plTool
       - item: Coverage Report
         points: 10
         details: Correct coverage when running unit tests. 
         icon: ccTool
       - item: Eclipse Git Configuration
         points: 15
         details: User name and email are set in Eclipse's eGit settings. This can also be assessed via the user name that shows up in GitHub.
         icon: ideTool
       - item: DemoProject Committed to GitHub
         points: 15
         details: DemoProject committed to GitHub in the correct folder structure.
         icon: vcTool
       - item: Extra Credit - Command Line Git Configuration
         points: 5
         details: Command line Git user name and email are set up
         icon: vcTool
#     collaborative:
#       - item: Pair Programming Activity
#         points: 10
#         details: Participate in pair programming activity.
#         icon: teamTask
  lab01:
     overall: 
       - item: Teaching Staff Unit Tests
         points: 25
         details: Pass all of the teaching staff unit tests, both provided and hidden.
         icon: unitTest
       - item: Teaching Staff System Tests
         points: 20
         details: Pass all of the teaching staff system tests (note that they will not be provided).
         icon: systemTest
       - item: Javadoc Comments
         points: 10
         details: Student and StudentRecordIO are commented with meaningful comments.
         icon: dtTool
       - item: Javadoc Generation
         points: 5
         details: Javadoc tool was used to generate the HTML version of the API, which matches the current version of the in-code Javadoc.
         icon: dtTool
       - item: Style
         points: 10
         details: Any PMD, CheckStyle, or SpotBugs Scary or Scariest notifications will result in a one point deduction, up to the available points.
         icon: saTool
  lab02:
     overall:
       - item: Teaching Staff Unit Tests
         points: 10
         details: Pass all of the teaching staff unit tests, both provided and hidden.
         icon: unitTest
       - item: Student Unit Tests
         points: 10
         details: Pass all of your unit tests.
         icon: unitTest
       - item: Student Test Coverage
         points: 10
         details: 80% statement/line coverage on Student, StudentRecordIO, and StudentDirectory
         icon: unitTest
       - item: Teaching Staff System Tests
         points: 10
         details: Pass all of the teaching staff system tests (note that they will not be provided).
         icon: systemTest
       - item: Student System Tests
         points: 15
         details: Pass all of your black box tests.
         icon: systemTest
       - item: Javadoc Comments
         points: 5
         details: All classes, including the tests are commented with meaningful comments.
         icon: dtTool
       - item: Javadoc Generation
         points: 5
         details: Javadoc tool was used to generate the HTML version of the API, which matches the current version of the in-code Javadoc.
         icon: dtTool
       - item: Style
         points: 10
         details: Any PMD, CheckStyle, or SpotBugs Scary or Scariest notifications will result in a one point deduction, up to the available points.
         icon: saTool
     extra-credit:
       - item: Over 90% Statement Coverage
         points: 1-3
         details: One point of extra credit for each class with over 90% statement coverage.
       - item: 100% Statement Coverage
         points: 1-3
         details: One point of extra credit for each class with 100% statement coverage except for the paths described in the writeup (in addition to the points earned for the 90% statement threshold). 
       - item: 100% Condition Coverage
         points: 1-3
         details: One point of extra credit for each class with 100% condition coverage except for paths described in the writeup (in addition to the points earned for the 90% & 100% statement threshold).
  lab03:
     overall:
       - item: Teaching Staff Unit Tests
         points: 15
         details: Pass all of the teaching staff unit tests (no regressions), both provided and hidden.
         icon: unitTest
       - item: Student Unit Tests
         points: 15
         details: Pass all of your unit tests.
         icon: unitTest
       - item: Student Test Coverage
         points: 15
         details: 80% statement/line coverage on Student, StudentRecordIO, and StudentDirectory
         icon: unitTest
       - item: Teaching Staff System Tests
         points: 10
         details: Pass all of the teaching staff system tests (note that they will not be provided).
         icon: systemTest
       - item: Javadoc Comments
         points: 5
         details: All classes, including the tests are commented with meaningful comments.
         icon: dtTool
       - item: Javadoc Generation
         points: 5
         details: Javadoc tool was used to generate the HTML version of the API, which matches the current version of the in-code Javadoc.
         icon: dtTool
       - item: Style
         points: 5
         details: Any PMD, CheckStyle, or SpotBugs Scary or Scariest notifications will result in a one point deduction, up to the available points.
         icon: saTool
  lab04:
     overall:
       - item: Design Comparison and Evaluation
         points: 15
         details: Discussion of tradeoffs and reasoning behind the selection of a design.
         icon: design
       - item: Teaching Staff Unit Tests
         points: 15
         details: Pass all of the teaching staff unit tests (no regressions), both provided and hidden.
         icon: unitTest
       - item: Student Unit Tests
         points: 15
         details: Pass all of your unit tests.
         icon: unitTest
       - item: Student Test Coverage
         points: 15
         details: 80% statement/line coverage on Student, StudentRecordIO, and StudentDirectory
         icon: unitTest
       - item: Javadoc Comments
         points: 5
         details: All classes, including the tests are commented with meaningful comments.
         icon: dtTool
       - item: Javadoc Generation
         points: 5
         details: Javadoc tool was used to generate the HTML version of the API, which matches the current version of the in-code Javadoc.
         icon: dtTool
       - item: Style
         points: 5
         details: Any PMD, CheckStyle, or SpotBugs Scary or Scariest notifications will result in a one point deduction, up to the available points.
         icon: saTool
       - item: Design Extension
         points: 10
         details: Design is a possible solution for the additional use case.
         icon: design
  lab05:
     overall:
       - item: Teaching Staff Unit Tests
         points: 15
         details: Pass all of the teaching staff unit tests (no regressions), both provided and hidden.
         icon: unitTest
       - item: Student Unit Tests
         points: 15
         details: Pass all of your unit tests.
         icon: unitTest
       - item: Student Test Coverage
         points: 15
         details: 80% statement/line coverage on every non-UI/non-test class.
         icon: unitTest
       - item: Teaching Staff System Tests
         points: 10
         details: Pass all of the teaching staff system tests (note that they will not be provided).
         icon: systemTest
       - item: Javadoc Comments
         points: 5
         details: All classes, including the tests are commented with meaningful comments.
         icon: dtTool
       - item: Javadoc Generation
         points: 5
         details: Javadoc tool was used to generate the HTML version of the API, which matches the current version of the in-code Javadoc.
         icon: dtTool
       - item: Style
         points: 5
         details: Any PMD, CheckStyle, or SpotBugs Scary or Scariest notifications will result in a one point deduction, up to the available points.
         icon: saTool
  lab06:
     overall:
       - item: Finite State Machine Diagram
         points: 10
         details: A finite state machine diagram with the correct notation that meets the requirements.
         icon: design
       - item: Teaching Staff Unit Tests
         points: 15
         details: Pass all of the teaching staff unit tests (no regressions), both provided and hidden.
         icon: unitTest
       - item: Student Unit Tests
         points: 10
         details: Pass all of your unit tests.
         icon: unitTest
       - item: Student Test Coverage
         points: 10
         details: 80% statement/line coverage on every non-UI/non-test class.
         icon: unitTest
       - item: Teaching Staff System Tests
         points: 10
         details: Pass all of the teaching staff system tests (note that they will not be provided).
         icon: systemTest
       - item: Javadoc Comments
         points: 5
         details: All classes, including the tests are commented with meaningful comments.
         icon: dtTool
       - item: Javadoc Generation
         points: 5
         details: Javadoc tool was used to generate the HTML version of the API, which matches the current version of the in-code Javadoc.
         icon: dtTool
       - item: Style
         points: 5
         details: Any PMD, CheckStyle, or SpotBugs Scary or Scariest notifications will result in a one point deduction, up to the available points.
         icon: saTool
  lab07:
     overall:
       - item: Teaching Staff Unit Tests
         points: 15
         details: Pass all of the teaching staff unit tests (no regressions), both provided and hidden.
         icon: unitTest
       - item: Student Unit Tests
         points: 15
         details: Pass all of your unit tests.
         icon: unitTest
       - item: Student Test Coverage
         points: 15
         details: 80% statement/line coverage on every non-UI/non-test class.
         icon: unitTest
       - item: Teaching Staff System Tests
         points: 10
         details: Pass all of the teaching staff system tests (note that they will not be provided).
         icon: systemTest
       - item: Javadoc Comments
         points: 5
         details: All classes, including the tests are commented with meaningful comments.
         icon: dtTool
       - item: Javadoc Generation
         points: 5
         details: Javadoc tool was used to generate the HTML version of the API, which matches the current version of the in-code Javadoc.
         icon: dtTool
       - item: Style
         points: 5
         details: Any PMD, CheckStyle, or SpotBugs Scary or Scariest notifications will result in a one point deduction, up to the available points.
         icon: saTool
  lab08:
     overall:
       - item: Teaching Staff Unit Tests
         points: 15
         details: Pass all of the teaching staff unit tests (no regressions), both provided and hidden.
         icon: unitTest
       - item: Student Unit Tests
         points: 15
         details: Pass all of your unit tests.
         icon: unitTest
       - item: Student Test Coverage
         points: 15
         details: 80% statement/line coverage on every non-UI/non-test class.
         icon: unitTest
       - item: Teaching Staff System Tests
         points: 10
         details: Pass all of the teaching staff system tests (note that they will not be provided).
         icon: systemTest
       - item: Javadoc Comments
         points: 5
         details: All classes, including the tests are commented with meaningful comments.
         icon: dtTool
       - item: Javadoc Generation
         points: 5
         details: Javadoc tool was used to generate the HTML version of the API, which matches the current version of the in-code Javadoc.
         icon: dtTool
       - item: Style
         points: 5
         details: Any PMD, CheckStyle, or SpotBugs Scary or Scariest notifications will result in a one point deduction, up to the available points.
         icon: saTool
  lab09:
     overall:
       - item: Teaching Staff Unit Tests
         points: 15
         details: Pass all of the teaching staff unit tests (no regressions), both provided and hidden.
         icon: unitTest
       - item: Student Unit Tests
         points: 15
         details: Pass all of your unit tests.
         icon: unitTest
       - item: Student Test Coverage
         points: 15
         details: 80% statement/line coverage on every non-UI/non-test class.
         icon: unitTest
       - item: Teaching Staff System Tests
         points: 10
         details: Pass all of the teaching staff system tests (note that they will not be provided).
         icon: systemTest
       - item: Javadoc Comments
         points: 5
         details: All classes, including the tests are commented with meaningful comments.
         icon: dtTool
       - item: Javadoc Generation
         points: 5
         details: Javadoc tool was used to generate the HTML version of the API, which matches the current version of the in-code Javadoc.
         icon: dtTool
       - item: Style
         points: 5
         details: Any PMD, CheckStyle, or SpotBugs Scary or Scariest notifications will result in a one point deduction, up to the available points.
         icon: saTool
  lab10:
     overall:
       - item: Teaching Staff Unit Tests
         points: 15
         details: Pass all of the teaching staff unit tests (no regressions), both provided and hidden.
         icon: unitTest
       - item: Student Unit Tests
         points: 15
         details: Pass all of your unit tests.
         icon: unitTest
       - item: Student Test Coverage
         points: 15
         details: 80% statement/line coverage on every non-UI/non-test class.
         icon: unitTest
       - item: Teaching Staff System Tests
         points: 10
         details: Pass all of the teaching staff system tests (note that they will not be provided).
         icon: systemTest
       - item: Javadoc Comments
         points: 5
         details: All classes, including the tests are commented with meaningful comments.
         icon: dtTool
       - item: Javadoc Generation
         points: 5
         details: Javadoc tool was used to generate the HTML version of the API, which matches the current version of the in-code Javadoc.
         icon: dtTool
       - item: Style
         points: 5
         details: Any PMD, CheckStyle, or SpotBugs Scary or Scariest notifications will result in a one point deduction, up to the available points.
         icon: saTool
  lab11:
     overall:
       - item: Teaching Staff Unit Tests
         points: 15
         details: Pass all of the teaching staff unit tests (no regressions), both provided and hidden.
         icon: unitTest
       - item: Student Unit Tests
         points: 15
         details: Pass all of your unit tests.
         icon: unitTest
       - item: Student Test Coverage
         points: 15
         details: 80% statement/line coverage on every non-UI/non-test class.
         icon: unitTest
       - item: Teaching Staff System Tests
         points: 10
         details: Pass all of the teaching staff system tests (note that they will not be provided).
         icon: systemTest
       - item: Javadoc Comments
         points: 5
         details: All classes, including the tests are commented with meaningful comments.
         icon: dtTool
       - item: Javadoc Generation
         points: 5
         details: Javadoc tool was used to generate the HTML version of the API, which matches the current version of the in-code Javadoc.
         icon: dtTool
       - item: Style
         points: 5
         details: Any PMD, CheckStyle, or SpotBugs Scary or Scariest notifications will result in a one point deduction, up to the available points.
         icon: saTool
  cbe:
     overall:
       - item: Finite State Machines
         points: 20
         details:
       - item: ArrayLists
         points: 20
         details:
       - item: LinkedLists
         points: 20
         details:
       - item: Stacks and Queues
         points: 20
         details:
       - item: Recursive LinkedLists
         points: 20
         details:
  cbe-deductions:
     overall:
       - item: Static Analysis Notifications
         points: -10
         details: any unresolved static analysis notifications will lead to points off up to 10 points off
       - item: Poor State Pattern Implementation
         points: up to 20 points off
         details: not utilizing the state pattern
       - item: Poor ArrayList Implementation
         points: up to 20 points off
         details: not following expectations
       - item: Poor LinkedList and Iterator Implementation
         points: up to 20 points off
         details: not following expectations
       - item: Poor Stacks and Queues Implementation
         points: up to 20 points off
         details: not following expectations
       - item: Poor Recursive LinkedList Implementation
         points: up to 20 points off
         details: not following expectations or not using recursion
  cbe-fsm:
     overall:
       - item: Student Tests
         points: 5
         details: Student tests are passing.
       - item: Student Coverage
         points: 5
         details: Statement coverage exceed 80%
       - item: Teaching Staff Tests
         points: 5
         details: Teaching Staff Tests are passing
       - item: Design & Review
         points: 5
         details: Review of FSM diagram, code, documentation, and tests.
  cbe-al:
     overall:
       - item: Student Tests
         points: 5
         details: Student tests are passing.
       - item: Student Coverage
         points: 5
         details: Statement coverage exceed 80%
       - item: Teaching Staff Tests
         points: 5
         details: Teaching Staff Tests are passing
       - item: Review
         points: 5
         details: Review of code, documentation, and tests.
  cbe-sq:
     overall:
       - item: Student Tests
         points: 5
         details: Student tests are passing.
       - item: Student Coverage
         points: 5
         details: Statement coverage exceed 80%
       - item: Teaching Staff Tests
         points: 5
         details: Teaching Staff Tests are passing
       - item: Review
         points: 5
         details: Review of code, documentation, algorithm analysis, and tests.
  cbe-ll:
     overall:
       - item: Student Tests
         points: 5
         details: Student tests are passing.
       - item: Student Coverage
         points: 5
         details: Statement coverage exceed 80%
       - item: Teaching Staff Tests
         points: 5
         details: Teaching Staff Tests are passing
       - item: Review
         points: 5
         details: Review of code, documentation, and tests.
  cbe-rll:
     overall:
       - item: Student Tests
         points: 5
         details: Student tests are passing.
       - item: Student Coverage
         points: 5
         details: Statement coverage exceed 80%
       - item: Teaching Staff Tests
         points: 5
         details: Teaching Staff Tests are passing
       - item: Review
         points: 5
         details: Review of code, documentation, and tests.
         
  sync-collab:
     overall:
       - item: In-Lab Collaboration
         points: 10
         details: PTFs will be looking for collaboration with your partner during lab activities.  Did you participate in completing the lab assignment?  Did you balance your roles of driver and navigator?  There will be deductions for observations of non-participation or hogging of one role or the other so a partner cannot participate.
       - item: Out-Lab Collaboration
         points: 10
         details: Did you make at least one meaningful commit to GitHub for completing the lab (e.g., meaningful means that the commit has to contribute to the solution and isn't superficial)?  If you pair programmed, is it noted in the commit message?  Did you not allow your partner, who wanted to contribute, to commit?  
       - item: Tasks
         points: 5
         details: Did you add your tasks for the lab to the top of the README file?  Did you include owners? Did you include internal deadlines?  Are the tasks shown as complete with any other needed updates (e.g., the person who completed or helped with the task changed)
       - item: Collaboration Check-in
         points: 5
         details: Did you complete the collaboration check-in on time?
  async-collab:
     overall:
       - item: Collaboration
         points: 10
         details: Did you make at least one meaningful commit to GitHub for completing the lab (e.g., meaningful means that the commit has to contribute to the solution and isn't superficial)?  If you pair programmed, is it noted in the commit message?  Did you not allow your partner, who wanted to contribute, to commit? 
       - item: Tasks
         points: 5
         details: Did you add your tasks for the lab to the top of the README file?  Did you include owners? Did you include internal deadlines?  Are the tasks shown as complete with any other needed updates (e.g., the person who completed or helped with the task changed)
       - item: Collaboration Check-in
         points: 5
         details: Did you complete the collaboration check-in on time?
  deductions:
     overall:
       - item: Misnamed file or incorrect project structure
         points: -5
         details: Incorrect names of files or incorrect project structure.  This can include problems when importing the project to Eclipse for acceptance testing, incorrect location of the system test file, incorrect file extension, etc. 
       - item: Other deductions
         points: -5
         details: If the project has to be manually graded due, you will receive a 5 point deduction.  Make sure that your project builds on Jenkins!
  
     
